{"version":3,"sources":["components/Navbar.js","components/EmptyMovieCard.js","components/MovieCard.js","components/Nominations.js","components/SearchResults.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","src","alt","onClick","console","log","onSubmit","getMovies","type","placeholder","name","value","query","onChange","setMovieQuery","disabled","length","EmptyMovieCard","MovieCard","movie","Poster","Title","onError","e","target","onerror","Year","nominated","nominationLength","setButtonClassName","toggleNomination","setButtonText","Nominations","nominatedMovies","map","imdbID","emptyCardNumber","Array","fill","getEmptyCards","SearchResults","allResults","headerText","error","results","filter","result","Main","useState","setQuery","setResults","setError","setNominatedMovies","setHeaderText","useEffect","storedNominations","localStorage","getItem","JSON","parse","getLatestMovies","a","process","axios","response","data","Search","preventDefault","Error","updatedNominations","element","setItem","stringify","res","isNominated","forEach","isAlreadyNominated","filterSearchResults","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8038d77.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Navbar = (props) => {\n  const handleClick = () => {\n    console.log(\"HERE!\");\n  };\n\n  return (\n    <div className=\"nb-container\">\n      <img\n        className=\"navbar-logo\"\n        src=\"./shoppies-logo-2.png\"\n        alt=\"shoppies-logo\"\n        onClick\n        {...handleClick()}\n      />\n      <div className=\"search-bar\">\n        <form className=\"search-form\" onSubmit={props.getMovies}>\n          <input\n            type=\"search\"\n            placeholder=\"Search movies\"\n            name=\"search\"\n            value={props.query}\n            onChange={props.setMovieQuery}\n          />\n          <button\n            className=\"button-search\"\n            type=\"submit\"\n            disabled={!props.query.length}\n            onClick={props.getMovies}\n          >\n            Search\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nconst EmptyMovieCard = () => {\n  return (\n    <div className=\"empty-card-container\">\n      <div className=\"empty-card\"></div>\n    </div>\n  );\n};\n\nexport default EmptyMovieCard;\n","import React from \"react\";\n\nconst MovieCard = (props) => {\n  const setButtonText = (movie) => {\n    return movie.nominated ? \"Remove\" : \"Nominate\";\n  };\n\n  const setButtonClassName = (movie) => {\n    return movie.nominated ? \"remove-nomination-button\" : \"nomination-button\";\n  };\n\n  const setDisabled = (movie) => {\n    return !movie.nominated && props.nominationLength >= 5;\n  };\n  return (\n    <div className=\"movie-card\">\n      <div className=\"movie-img-container\">\n        <img\n          className=\"movie-img\"\n          src={props.movie.Poster}\n          alt={props.movie.Title}\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src = \"./404-image.png\";\n          }}\n        />\n      </div>\n      <p className=\"movie-title\">{props.movie.Title}</p>\n      <p>{props.movie.Year}</p>\n      <button\n        disabled={setDisabled(props.movie)}\n        className={setButtonClassName(props.movie)}\n        onClick={() => props.toggleNomination(props.movie)}\n      >\n        {setButtonText(props.movie)}\n      </button>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import React from \"react\";\nimport EmptyMovieCard from \"./EmptyMovieCard\";\nimport MovieCard from \"./MovieCard\";\n\nconst Nominations = (props) => {\n  const getMovieCards = () => {\n    return props.nominatedMovies.map((movie) => {\n      return (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n          toggleNomination={props.toggleNomination}\n          nominationLength={props.nominationLength}\n        />\n      );\n    });\n  };\n\n  const getEmptyCards = () => {\n    const emptyCardNumber = 5 - props.nominationLength;\n    return Array(emptyCardNumber).fill(<EmptyMovieCard />);\n  };\n\n  return (\n    <div className=\"nominated-section\">\n      <h2>Nominated Movies</h2>\n      <div>\n        {props.nominationLength === 5 && (\n          <p className=\"limit-msg\">5 nomination limit reached</p>\n        )}\n      </div>\n      <div className=\"movie-list\">\n        {[...getMovieCards(), ...getEmptyCards()]}\n      </div>\n    </div>\n  );\n};\n\nexport default Nominations;\n","import React from \"react\";\nimport MovieCard from \"./MovieCard\";\n\nconst SearchResults = (props) => {\n  const filterMovies = (allResults) => {\n    return allResults.filter((result) => !result.nominated);\n  };\n  return (\n    <div>\n      <h2>{props.headerText}</h2>\n      <div className=\"movie-list\">\n        {!props.error &&\n          filterMovies(props.results).map((movie) => {\n            return (\n              <MovieCard\n                key={movie.imdbID}\n                nominationLength={props.nominationLength}\n                toggleNomination={props.toggleNomination}\n                movie={movie}\n              />\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResults;\n","import React, { useState, useEffect } from \"react\";\nimport Navbar from \"./Navbar\";\nimport Nominations from \"./Nominations\";\nimport SearchResults from \"./SearchResults\";\nimport axios from \"axios\";\n\nconst Main = () => {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [nominatedMovies, setNominatedMovies] = useState([]);\n  const [headerText, setHeaderText] = useState(\"Latest Releases\");\n\n  useEffect(() => {\n    let storedNominations = localStorage.getItem(\"Nominations\");\n\n    if (storedNominations) {\n      setNominatedMovies(JSON.parse(storedNominations));\n    }\n    getLatestMovies();\n  }, []);\n\n  const getLatestMovies = async () => {\n    console.log(process.env);\n    const response = await axios(\n      `https://www.omdbapi.com/?s='the'&y=2020&apikey=${process.env.REACT_APP_OMDB_KEY}`\n    );\n\n    setResults(response.data.Search);\n  };\n\n  const isAlreadyNominated = (movie) => {\n    let isNominated = false;\n    nominatedMovies.forEach((element) => {\n      if (element.imdbID === movie.imdbID) {\n        isNominated = true;\n        return isNominated;\n      }\n    });\n    return isNominated;\n  };\n\n  const getMovies = async (e) => {\n    e.preventDefault();\n    const response = await axios(\n      `http://www.omdbapi.com/?s=${query}&apikey=${process.env.REACT_APP_OMDB_KEY}`\n    );\n    if (response.data.Error) {\n      setError(response.data.Error);\n      setHeaderText(response.data.Error);\n    } else {\n      setResults(\n        response.data.Search.map((movie) => {\n          return {\n            ...movie,\n            nominated: false,\n          };\n        })\n      );\n      setHeaderText(`Results for \"${query}\"`);\n      setError(\"\");\n    }\n  };\n\n  const filterSearchResults = (results) => {\n    if (results.length) {\n      const filteredResults = results.filter((res) => {\n        return !isAlreadyNominated(res);\n      });\n      return filteredResults;\n    }\n    return results;\n  };\n\n  const toggleNomination = (movie) => {\n    movie.nominated = !movie.nominated;\n    const updatedNominations = movie.nominated\n      ? [...nominatedMovies, movie]\n      : nominatedMovies.filter((element) => element !== movie);\n    setNominatedMovies(updatedNominations);\n    localStorage.setItem(\"nominations\", JSON.stringify(updatedNominations));\n  };\n\n  const setMovieQuery = (e) => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar\n        query={query}\n        getMovies={getMovies}\n        setMovieQuery={setMovieQuery}\n      />\n      <div>\n        <Nominations\n          nominatedMovies={nominatedMovies}\n          toggleNomination={toggleNomination}\n          nominationLength={nominatedMovies.length}\n        />\n      </div>\n      <div>\n        <SearchResults\n          headerText={headerText}\n          toggleNomination={toggleNomination}\n          nominationLength={nominatedMovies.length}\n          results={filterSearchResults(results)}\n          error={error}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}